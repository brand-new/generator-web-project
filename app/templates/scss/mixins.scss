/*
 *	Custom triangle mixin for pseudo elements
 */
@mixin triangle($oposite-direction, $size, $weight, $color) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: $size solid;
	border-#{$oposite-direction}: $weight solid;
	border-color: transparent;
	border-#{$oposite-direction}-color: $color;
}

/*
 * Breakpoint mixin for handeling min-width @media (inspired by http://codepen.io/chriscoyier/blog/codepens-css)
 * Prints: @media only screen and (min-width: Xem) { ... }
 */
@mixin bp($breakpoint) {
	$qry: nth(map-get($breakpoints, $breakpoint), 1);

	@if ($qry == null) {
		@error 'There is no breakpoint "#{$breakpoint}"!';
	}

	@media only screen and (min-width: #{$qry}) { @content; }
}

/*
 * Generates js media helpers for breakpoint consistency between scss & js
 */
@mixin js-media-helpers($breakpoints) {
	@each $key, $value in $breakpoints {
		// check if the heleper is wanted
		@if nth($value, 2) {
			meta.mq-#{$key} {
				font-family: "/only screen and (min-width: #{nth($value, 1)})/";
			}
		}
	}
}